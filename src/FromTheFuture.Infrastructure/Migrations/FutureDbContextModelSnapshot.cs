// <auto-generated />
using System;
using FromTheFuture.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FromTheFuture.Infrastructure.Migrations
{
    [DbContext(typeof(FutureDbContext))]
    partial class FutureDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FromTheFuture.Domain.Users.FutureBoxes.FutureBox", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserID")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserID");

                    b.ToTable("FutureBoxes","user");
                });

            modelBuilder.Entity("FromTheFuture.Domain.Users.FutureBoxes.FutureBoxItem", b =>
                {
                    b.Property<Guid>("FutureBoxId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FutureItemId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FutureBoxId", "FutureItemId");

                    b.HasIndex("FutureItemId");

                    b.ToTable("FutureBoxItems","user");
                });

            modelBuilder.Entity("FromTheFuture.Domain.Users.FutureItems.FutureItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserID")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserID");

                    b.ToTable("FutureItems","user");
                });

            modelBuilder.Entity("FromTheFuture.Domain.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users","user");
                });

            modelBuilder.Entity("FromTheFuture.Domain.Users.FutureBoxes.FutureBox", b =>
                {
                    b.HasOne("FromTheFuture.Domain.Users.User", null)
                        .WithMany("_futureBoxes")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FromTheFuture.Domain.Users.FutureBoxes.FutureBoxItem", b =>
                {
                    b.HasOne("FromTheFuture.Domain.Users.FutureBoxes.FutureBox", null)
                        .WithMany("_futureBoxItems")
                        .HasForeignKey("FutureBoxId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FromTheFuture.Domain.Users.FutureItems.FutureItem", null)
                        .WithMany("_futureBoxItems")
                        .HasForeignKey("FutureItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FromTheFuture.Domain.Users.FutureItems.FutureItem", b =>
                {
                    b.HasOne("FromTheFuture.Domain.Users.User", null)
                        .WithMany("_futureItems")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
